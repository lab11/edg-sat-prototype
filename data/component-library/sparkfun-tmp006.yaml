...
############
# Metadata #
############

# Short unique identifier for component at hand
# short-name :: String
short-name:  TMP006

# Longer more verbose name for use elsewhere? 
# long-name :: String
long-name: TMP006 Infrared Thermometer Breakout

# Reference URL for Component
# url :: URL
url: https://www.sparkfun.com/products/1859

# List of resources for more information
# resources :: [(Label => URL)]
resources: 
  hookup-guide: https://learn.sparkfun.com/tutorials/tmp006-hookup-guide
  datasheet: http://cdn.sparkfun.com/datasheets/Sensors/Temp/tmp006.pdf
  user-guide: http://cdn.sparkfun.com/datasheets/Sensors/Temp/sbou107.pdf

# Price of given component at retrieval time
# price :: Dollars
price: $14.95

# Class of component to be found? might help organizing component db
# class :: String
class: Infrared Thermometer

# Notes for my own use, nothing of huge import 
# notes :: Text 
notes: |
  Non-contact thermometer that communicates over I2C. 

##################
# Type Signature #
##################

# TODO) General Device properties 
# Operating temp range : -40 to 125 C 
# Storage Temp Range : -40 to 125 c 
# Field of view : 90 degrees 

resources:
  - name: "VCC" 
    type: Pin 
  - name: "SCL" 
    type: Pin 
  - name: "SDA" 
    type: Pin 
  - name: "DRDY" 
    type: Pin
  - name: "ADR1" 
    type: Pin
  - name: "ADR0" 
    type: Pin


# The actual ports that the MCU will present to the inside/outside world
ports: 
  - name: "I2C" 
    type: I2C
    resources-used: 
      - {SDA:"SDA", SCL:"SCL",other: ["ADR1","ADR0"] }
    connected-components:
      # Any of these are possible by changing the connections for the 
      # "ADR1" and "ADR0" lines. 
      - address: ["0x40","0x41","0x42","0x43","0x44","0x45","0x46","0x47"]
        interface: "TMP006 I2C"
    # TODO) Decide how to work with multiple possible speeds here 
    # Possible speeds: 10kHz, 100kHz, 400kHz, 1mHz. (prob
    # Requires CRC that should be in the driver code
  - name: "Power" 
    type: Power
    supply-range: {min: "2.4v", max: "3.6v", expected: "3v"} 

# TODO) Represent shared ground pins somehow 
# TODO) Neccesary ports for functioning 

####################
# Reification Data #
####################
---
...
############
# Metadata #
############

# Short unique identifier for component at hand
# short-name :: String
short-name:  MLX-90614 Driver

# Longer more verbose name for use elsewhere? 
# long-name :: String
long-name: Infrared Thermometer Driver

# Reference URL for Component
# url :: URL
url: https://github.com/sparkfun/SparkFun_MLX90614_Arduino_Library

# List of resources for more information
# resources :: [(Label => URL)]
resources: 

# Price of given component at retrieval time
# price :: Dollars
price: $19.95

# Class of component to be found? might help organizing component db
# class :: String
class: Infrared Thermometer

# Notes for my own use, nothing of huge import 
# notes :: Text 
notes: |
  Non-contact thermometer that communicates over I2C. Pins are numbered from 
  the tab, going counter clockwise looking at it from above.

##################
# Type Signature #
##################

# TODO) General Device properties 
# Operating temp range : -40 to 125 C 
# Storage Temp Range : -40 to 125 c 
# Field of view : 90 degrees 

resources:
  - name: "#1 SCL" 
    type: Pin 
  - name: "#2 SDA" 
    type: Pin 
  - name: "#3 Vdd" 
    type: Pin 
  - name: "#4 Vss" 
    type: Pin

# The actual ports that the MCU will present to the inside/outside world
ports: 
  - name: "I2C" 
    type: I2C
    resources-used: 
      - {SDA:"#2 SDA", SCL:"#1 SCL"}
    connected-components:
      - {address: "0x5A", interface: "MLX-90614 I2C"}
    # TODO) Decide how to work with multiple possible speeds here 
    # Possible speeds: 10kHz, 100kHz
    # Requires CRC that should be in the driver code
  - name: "Power" 
    type: Power
    resources-used: {vcc: "#3 Vdd", gnd: "#4 vss"} 
    supply-range: {min: "2.4v", max: "3.6v", expected: "3v"}
    current-draw: 4mA 

# TODO) Neccesary ports for functioning 

####################
# Reification Data #
####################
---
