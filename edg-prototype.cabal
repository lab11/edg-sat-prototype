name:                edg-prototype
version:             0.1.0.0
synopsis:            Project for the embedded device generation prototype
description:         Please see README.md
homepage:            https://github.com/githubuser/edg-prototype#readme
license:             BSD3
license-file:        LICENSE
author:              Rohit Ramesh
maintainer:          rohitram@umich.edu
copyright:           2016 Rohit Ramesh
category:            Web
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/githubuser/edg-prototype

executable edg-prototype

  hs-source-dirs:
    app

  main-is:
    Main.hs

  other-modules:
    Examples.CommonPorts
    Examples.CommonModules
    Examples.Simon
    Examples.Logger

  -- LANGUAGE extensions used by modules in this package.
  default-extensions:
    BangPatterns
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveGeneric
    DuplicateRecordFields
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedLabels
    OverloadedLists
    OverloadedStrings
    PatternGuards
    PatternSynonyms
    RankNTypes
    RecordWildCards
    RecursiveDo
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    ViewPatterns

  ghc-options: -threaded -rtsopts -with-rtsopts=-N

  build-depends:
    base >= 4.9,
    -- Used to build bindings to z3 and other theorem provers as needed
    sbv >= 5.12,
    -- Monad Transformers we can wrap around symbolic
    mtl >= 2.2.1,
    -- Datastructures and containers
    containers >= 0.5.7,
    -- Scrap your boilerplate, used for SBV's extra deriving classes
    syb >= 0.6,
    -- Argument Handling 
    optparse-applicative, 
    -- The library we are developing
    edg-prototype

  default-language:    Haskell2010

library
  -- Modules exported by the library.
  exposed-modules:
    EDG

  -- Modules included in this library but not exported.
  other-modules:
    EDG.SBVWrap
    EDG.EDGDatatype
    Control.Monad.Scribe
    Control.Monad.MonadSymbolic
    Control.Newtype.Util
    Control.Lens.TupleLens
    Control.Lens.Ether.Implicit
    -- Control.Lens.MakePolyFields
    -- Algebraic Objects
    Algebra
    Algebra.GenOrd
    Algebra.Constrainable
    Algebra.AsPredicate
    --EDG.Predicates -- generic predicates
    EDG.Predicates
    EDG.Predicates.Predicate
    EDG.Predicates.Tuple
    EDG.Predicates.OneOf
    EDG.Predicates.NoneOf
    EDG.Predicates.Bounds
    EDG.Predicates.Range
    EDG.Predicates.Maybe
    -- Special Data Structures
    Data.EqMap
    --EDG.Classes -- Classes which may or maynot be useful
    EDG.Classes.Fields
    EDG.Classes.Normalizable
    -- EDG.Library -- Low-level types and constraints over them
    EDG.Library.Types
    EDG.Library.Types.Bool
    EDG.Library.Types.String
    EDG.Library.Types.Float
    EDG.Library.Types.UID
    EDG.Library.Types.Integer
    EDG.Library.Types.Record
    EDG.Library.Types.TypeVal
    -- EDG.EDGInstances -- Converting low level types into something SBV can handle
    -- TODO :: Reorganize these.
    EDG.EDGMonad
    EDG.EDGInstances
    EDG.EDGInstances.Bool
    EDG.EDGInstances.String
    EDG.EDGInstances.Float
    EDG.EDGInstances.UID
    EDG.EDGInstances.Integer
    EDG.EDGInstances.Record
    -- EDG.Elements -- High level design elements
    EDG.ElemIncludes
    EDG.ElemTypes
    EDG.PortTypes
    EDG.Elements
    EDG.Elements.Port
    EDG.Elements.Elem
    --
    EDG.Expression
    --
    EDG.AssembleGraph
    EDG.Graphviz

  -- LANGUAGE extensions used by modules in this package.
  default-extensions:
    BangPatterns
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveGeneric
    DuplicateRecordFields
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    InstanceSigs
    KindSignatures
    LambdaCase
    LiberalTypeSynonyms
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedLabels
    OverloadedLists
    OverloadedStrings
    PatternGuards
    PatternSynonyms
    PolyKinds
    RankNTypes
    RecordWildCards
    RecursiveDo
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    ViewPatterns


  -- Other library packages from which modules are imported.
  build-depends:
    base >=4.9,
    -- Used for Lens operations
    lens >= 4.12.3,
    template-haskell >= 2.10,
    -- Lattice Ordering Types
    lattices >= 1.5.0,
    -- Used to help compose and decompose newtypes, and for the corresponding
    -- Utility functions.
    newtype >= 0.2,
    -- Used to build bindings to z3 and other theorem provers as needed
    sbv >= 5.14,
    -- Basic Containers
    bimap >= 0.3.2,
    containers,
    -- Fixed point type
    data-fix >= 0.0.3,
    -- heaps >= 0.3.2.1,
    -- vector >= 0.10,
    -- -- Monad Transformers
    ether >= 0.4.0.2,
    mtl >= 2.2.1,
    transformers >= 0.4.2,
    -- Generics
    syb >= 0.6,
    -- Generates the Typeclass tree for generic overloading
    overload >= 0.1.0.3,
    -- Graphviz libary
    graphviz,
    -- More powerful Text Type 
    text,
    -- Argument Handling 
    optparse-applicative,
    -- Allows for evaluation of data into a 
    -- complete normal form, that should be
    -- significantly faster
    deepseq,
    -- -- Convinient ordered list functions
    -- data-ordlist >= 0.4.7.0,
    -- -- Used to interleave monadic actions in weird ways
    -- monad-control >= 1.0.0.4,
    -- template-haskell >= 2.10,
    -- vector >= 0.10,
    -- Pretty Printing of Haskell Datatypes
    pretty-simple

  -- Directories containing source files.
  hs-source-dirs:
    lib

  -- Base language which the package is written in.
  default-language:
    Haskell2010

  ghc-options:
    -ddump-splices
    -fwarn-incomplete-patterns

test-suite edg-prototype-test
  type: exitcode-stdio-1.0

  hs-source-dirs: test, lib

  Main-is:
    Main.hs

  default-language:
    Haskell2010

  -- Dpendencies that are solely for TESTING
  build-depends:
    hspec >= 1.3,
    QuickCheck >= 2.8

  -- Dependencies that are IDENTICAL to the library dependencies.
  build-depends:
    base >=4.8,
    -- Used for Lens operations
    lens >= 4.12.3,
    template-haskell >= 2.10,
    -- Basic Containers
    containers,
    -- heaps >= 0.3.2.1,
    -- vector >= 0.10,
    -- -- Monad Transformers
    -- mtl >= 2.2.1,
    -- transformers >= 0.4.2,
    -- -- Provides tagged monads, so that we can remove all those
    -- --   fucking `(lift . lift)`s
    -- ether >= 0.3.0.0,
    -- -- Convinient ordered list functions
    -- data-ordlist >= 0.4.7.0,
    -- -- Used to interleave monadic actions in weird ways
    -- monad-control >= 1.0.0.4,
    -- template-haskell >= 2.10,
    -- vector >= 0.10,
    -- Pretty Printing of Haskell Datatypes
    pretty-show


  -- LANGUAGE extensions used by modules in this package.
  default-extensions:
    BangPatterns
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveGeneric
    DuplicateRecordFields
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedLabels
    OverloadedLists
    OverloadedStrings
    PatternGuards
    PatternSynonyms
    RankNTypes
    RecordWildCards
    RecursiveDo
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    ViewPatterns

